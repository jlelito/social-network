{"version":3,"sources":["components/Navbar.js","utils.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","id","this","props","account","width","height","src","concat","Identicon","toString","Component","getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","App","_useState","useState","undefined","_useState2","slicedToArray","setWeb3","_useState3","_useState4","accounts","setAccounts","_useState5","_useState6","contract","setContract","_useState7","_useState8","posts","setPosts","useEffect","_ref","networkId","deployedNetwork","sent","eth","getAccounts","net","getId","SocialNetwork","networks","Contract","abi","address","apply","arguments","init","on","isReady","_updatePosts","_callee2","postCount","i","_context2","parseInt","methods","call","t1","t2","t3","push","t4","all","t5","_createPost","_callee3","e","content","_context3","preventDefault","target","elements","value","createPost","send","from","once","receipt","location","reload","_tipPost","_callee4","tipAmount","_context4","utils","toWei","tipPost","updatePosts","components_Navbar","role","style","maxWidth","onSubmit","_x","type","placeholder","required","map","post","key","author","fromWei","onClick","event","_x2","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d7c861b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\n\r\nclass Navbar extends Component{\r\n\trender(){\r\n\treturn (\r\n\r\n\t\t<nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          \r\n            Josh University\r\n          \r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className = \"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            {this.props.account \r\n            \t?\r\n\t            \t<img className=\"ml-2\" \r\n\t            width='30' \r\n\t            height=\"30\" \r\n\t            src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n\t            />\r\n\t            : <span></span>\r\n            }\r\n            \r\n          </li>\r\n        </ul>\r\n        </nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navbar;","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://localhost:9545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getWeb3 };\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Navbar from './Navbar';\r\nimport { getWeb3 } from './../utils.js';\r\nimport SocialNetwork from '../abis/SocialNetwork.json';\r\nimport Identicon from 'identicon.js';\r\n\r\n\r\n\r\nfunction App(){\r\n\r\n\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [accounts, setAccounts] = useState(undefined);\r\n  const [contract, setContract] = useState(undefined);\r\n  const [posts, setPosts] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const web3 = await getWeb3();\r\n      const accounts = await web3.eth.getAccounts();\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = SocialNetwork.networks[networkId];\r\n      const contract = new web3.eth.Contract(\r\n        SocialNetwork.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n      \r\n      \r\n      setWeb3(web3);\r\n      setAccounts(accounts);\r\n      setContract(contract);\r\n     \r\n      \r\n    }\r\n    init();\r\n    window.ethereum.on('accountsChanged', accounts => {\r\n      setAccounts(accounts);\r\n    });\r\n  }, []);\r\n\r\n  const isReady = () => {\r\n    return (\r\n      typeof contract !== 'undefined' \r\n      && typeof web3 !== 'undefined'\r\n      && typeof accounts !== 'undefined'\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isReady()) {\r\n      \r\n      updatePosts();\r\n    }\r\n  }, [accounts, contract, web3]);\r\n\r\n  async function updatePosts() {\r\n    const postCount = parseInt(await contract.methods.postCount().call());\r\n\r\n    const posts = [];\r\n    for(let i = 0; i < postCount; i++) { \r\n      posts.push(await contract.methods.posts(i).call());\r\n    }\r\n    \r\n    setPosts(await Promise.all(posts));\r\n    \r\n  }\r\n\r\n\r\n  async function createPost(e) {\r\n      e.preventDefault();\r\n      \r\n      const content = e.target.elements[0].value;\r\n      await contract.methods.createPost(content).send({ from: accounts[0] })\r\n      .once('receipt', (receipt) => {\r\n        window.location.reload();\r\n      })\r\n    }\r\n    \r\n  async function tipPost(id){\r\n        \r\n      const tipAmount = web3.utils.toWei('1','Ether');\r\n      await contract.methods.tipPost(id).send({ from: accounts[0], value: tipAmount })\r\n      .once('receipt', (receipt) => {\r\n        window.location.reload();\r\n      })\r\n      \r\n      \r\n    }\r\n\r\n  if (!isReady()) {\r\n    return <div id=\"loader\" className = \"text-center mt-5\"><p>Loading...</p></div>\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar account={accounts[0]}/>\r\n        \r\n          <div className=\"container-fluid mt-5\">\r\n                <div className=\"row\">\r\n                    <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth:'500px'}}>\r\n                    <div className=\"content mr-auto ml-auto\">\r\n                        <form onSubmit={e =>  createPost(e) }>\r\n                            <div className=\"form-group mr-sm-2\">\r\n                                <input\r\n                                    id=\"content\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"What's on your Mind?\"\r\n                                    required />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Share</button>\r\n                        </form>\r\n                        <br/>\r\n                        { posts.map((post,key) => {\r\n                        return(\r\n                            <div className=\"card mb-4\" key={key} >\r\n                            <div className=\"card-header\">\r\n                                <img className=\"mr-2\" \r\n                                width='30' \r\n                                height=\"30\" \r\n                                src={`data:image/png;base64,${new Identicon(post.author, 30).toString()}`}\r\n                                />\r\n                            <small className=\"text-muted\">{post.author}</small>\r\n                            </div>\r\n                            <ul id=\"postList\" className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\">\r\n                                <p>{post.content}</p>\r\n                            </li>\r\n                                <li key={key} className=\"list-group-item py-2\">\r\n                                <small className=\"float-left mt-1 text-muted\">TIPS: {web3.utils.fromWei(post.tipAmount.toString(),'Ether')} ETH\r\n                                </small>\r\n                                <button className=\"btn btn-link btn-sm float-right pt-0\" onClick ={(event) => tipPost(post.id)}>\r\n                                \r\n                                <span>\r\n                                    TIP 1 ETH\r\n                                </span>\r\n                                </button>\r\n                                \r\n                            </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n           \r\n           \r\n           \r\n           \r\n        \r\n      </div>\r\n    );\r\n}   \r\n  \r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}